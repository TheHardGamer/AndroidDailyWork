// Generated by view binder compiler. Do not edit!
package com.varun.app1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.varun.app1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIntentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button dial;

  @NonNull
  public final EditText editt;

  @NonNull
  public final Button googlebt;

  @NonNull
  public final Button sendmsg;

  @NonNull
  public final ImageButton whats;

  private ActivityIntentBinding(@NonNull ConstraintLayout rootView, @NonNull Button dial,
      @NonNull EditText editt, @NonNull Button googlebt, @NonNull Button sendmsg,
      @NonNull ImageButton whats) {
    this.rootView = rootView;
    this.dial = dial;
    this.editt = editt;
    this.googlebt = googlebt;
    this.sendmsg = sendmsg;
    this.whats = whats;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIntentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIntentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_intent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIntentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dial;
      Button dial = ViewBindings.findChildViewById(rootView, id);
      if (dial == null) {
        break missingId;
      }

      id = R.id.editt;
      EditText editt = ViewBindings.findChildViewById(rootView, id);
      if (editt == null) {
        break missingId;
      }

      id = R.id.googlebt;
      Button googlebt = ViewBindings.findChildViewById(rootView, id);
      if (googlebt == null) {
        break missingId;
      }

      id = R.id.sendmsg;
      Button sendmsg = ViewBindings.findChildViewById(rootView, id);
      if (sendmsg == null) {
        break missingId;
      }

      id = R.id.whats;
      ImageButton whats = ViewBindings.findChildViewById(rootView, id);
      if (whats == null) {
        break missingId;
      }

      return new ActivityIntentBinding((ConstraintLayout) rootView, dial, editt, googlebt, sendmsg,
          whats);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
